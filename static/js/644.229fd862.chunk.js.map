{"version":3,"file":"static/js/644.229fd862.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/pages/Contacts/ContactsPage.module.css?3d45","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","pages/Contacts/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import style from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredByName } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredByName);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = event => {\n    dispatch(deleteContact(event.target.dataset.id));\n  };\n\n  return (\n    <ul>\n      {contacts?.map(({ id, name, number }) => {\n        return (\n          <li className={style.item} key={id}>\n            <button\n              className={style.button}\n              onClick={handleDeleteContact}\n              type=\"button\"\n              data-id={id}\n            >\n              Delete\n            </button>\n            <p>{`${name}: ${number}`}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"glow\":\"Filter_glow__iLYet\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilterAction } from '../../redux/filter/sliceFilter';\n\nimport style from './Filter.module.css';\nimport { selectFilteredContact } from 'redux/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilteredContact);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(changeFilterAction(event.currentTarget.value));\n  };\n\n  return (\n    <label>\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactsPage_box__hZjJ3\",\"primeryTitle\":\"ContactsPage_primeryTitle__xjAYf\",\"secondaryTitle\":\"ContactsPage_secondaryTitle__b7mK0\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"glow\":\"ContactForm_glow__kiaDd\",\"button\":\"ContactForm_button__eSwX9\"};","import { selectContacts } from '../../redux/selectors';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/operations';\nimport style from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = (name, number) => {\n    return contacts?.find(contact => contact.name === name)\n      ? toast.error(`${name} is already in contacts`)\n      : dispatch(\n          addContacts({\n            name,\n            number,\n          })\n        );\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default: {\n        return;\n      }\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact(name, number);\n    toast.success(`${name} added to contacts.`);\n    onDelete();\n  };\n\n  const onDelete = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <label title=\"Name\" htmlFor=\"name\"></label>\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        value={name}\n        required\n      />\n      <label htmlFor=\"number\"></label>\n      <input\n        className={style.input}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleChange}\n        value={number}\n        required\n      />\n      <button className={style.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { Box } from 'components/Box';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport style from './ContactsPage.module.css';\nimport { ContactForm } from 'components/ContactForm';\n\nexport default function ContactsPage() {\n  return (\n    <Box>\n      <div className={style.box}>\n        <h1 className={style.primeryTitle}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={style.secondaryTitle}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Box>\n  );\n}\n"],"names":["ContactList","contacts","useSelector","selectFilteredByName","dispatch","useDispatch","useEffect","fetchContacts","handleDeleteContact","event","deleteContact","target","dataset","id","map","name","number","className","style","onClick","type","Filter","filter","selectFilteredContact","value","placeholder","onChange","changeFilterAction","currentTarget","ContactForm","selectContacts","useState","setName","setNumber","handleChange","onDelete","onSubmit","preventDefault","find","contact","toast","addContacts","handleAddContact","title","htmlFor","pattern","required","ContactsPage","Box"],"sourceRoot":""}